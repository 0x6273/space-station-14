- type: entity
  id: AMEController
  name: AME controller
  description: It's a controller for the antimatter engine.
  placement:
    mode: SnapgridCenter
  components:
  - type: Clickable
  - type: InteractionOutline
  - type: Sprite
    netsync: false
    snapCardinals: true
    sprite: Structures/Power/Generation/ame.rsi
    state: control
    layers:
    - state: control
    - map: [ "enum.AmeControllerVisualLayer.DisplayState" ]
      state: control_on #TODO
      #visible: false
  - type: Physics
  - type: Fixtures
    fixtures:
    - shape:
        !type:PhysShapeAabb
        bounds: "-0.45,-0.45,0.45,0.45"
      density: 190
      mask:
      - FullTileMask
      layer:
      - WallLayer
  - type: Damageable
    damageContainer: Inorganic
    damageModifierSet: Metallic
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 100
      behaviors:
      - !type:SpawnEntitiesBehavior
        spawn:
          SheetSteel1:
            min: 1
            max: 1
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Transform
    anchored: true
    noRot: true
  - type: Anchorable
  - type: Pullable
  - type: AmeController
    maxInjectionAmount: 20
    injectionIntervalSeconds: 10
    powerOutputConstant: 20000
    clickSound: /Audio/Machines/machine_switch.ogg
    injectSound: /Audio/Effects/bang.ogg
  - type: Explosive
    explosionType: Default
    intensitySlope: 5
    maxIntensity: 60
  - type: ActivatableUI
    key: enum.AmeControllerUiKey.Key
  - type: UserInterface
    interfaces:
    - key: enum.AmeControllerUiKey.Key
      type: AmeControllerBoundUserInterface
  - type: Appearance
  - type: GenericVisualizer
    visuals:
      enum.AmeControllerVisualLayer.DisplayState:
        enum.AmeControllerVisualLayer.DisplayState:
          Off: { visible: false }
          Normal: { visible: true, state: control_on }
          Critical: { visible: true, state: control_critical }
          Fuck: { visible: true, state: control_fuck }
  - type: NodeContainer
    examinable: true
    nodes:
      ame:
        !type:AdjacentNode
        nodeGroupID: Ame
      input:
        !type:CableDeviceNode
        nodeGroupID: HVPower
  - type: PowerSupplier
    supplyRate: 0
  - type: ItemSlots
    slots:
      fuel_container:
        whitelistFailPopup: ame-controller-component-cannot-put-entity-message
        whitelist:
          components:
          - AmeFuelContainer
        swap: false
  - type: ContainerContainer
    containers:
      fuel_container: !type:ContainerSlot {}

- type: entity
  noSpawn: true
  parent: AMEController
  id: AMEControllerUnanchored
  suffix: Unanchored
  components:
  - type: Physics
    bodyType: Dynamic

- type: entity
  id: AMEShielding
  name: AME shielding
  description: Keeps the antimatter in and the matter out.
  placement:
    mode: SnapgridCenter
  components:
  - type: Clickable
  - type: InteractionOutline
  - type: Sprite
    netsync: false
    drawdepth: Walls
    sprite: Structures/Power/Generation/ame.rsi
    state: shield_0
    layer:
    - map: [ "enum.AmeShieldingVisualLayer.CoreState" ]
      state: core_weak
  - type: Physics
  - type: Fixtures
    fixtures:
    - shape:
        !type:PhysShapeAabb
      density: 190
      mask:
      - FullTileMask
      layer:
      - WallLayer
  - type: Damageable
    damageContainer: Inorganic
    damageModifierSet: Metallic
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 100
      behaviors:
      - !type:SpawnEntitiesBehavior
        spawn:
          SheetSteel1:
            min: 1
            max: 2
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Transform
    anchored: true
  - type: IconSmooth
    mode: CardinalFlags
    base: shield_
    key: ame_shielding
  - type: AmeShielding
  - type: NodeContainer
    nodes:
      ame:
        !type:AdjacentNode
        nodeGroupID: Ame
  - type: PointLight
    enabled: false
    radius: 5
    energy: 0.5
    color: "#00AAFF"
  - type: Appearance
  - type: GenericVisualizer
    visuals:
      enum.AmeShieldingVisualLayer.IsCore:
        is_core:
          True: { visible: true, state: core }
          False: { visible: false }
      enum.AmeShieldingVisualLayer.CoreState:
        enum.AmeShieldingVisualLayer.CoreState:
          Off: { visible: false }
          Weak: { visible: true, state: core_weak }
          Strong: { visible: true, state: core_strong }
  - type: Construction
    graph: AMEShielding
    node: ameShielding
